/*
  Common function
*/
Element.prototype.parents = function(selector) {
  // Vanilla JS jQuery.parents() realisation
  // https://gist.github.com/ziggi/2f15832b57398649ee9b

  var elements = [];
  var elem = this;
  var ishaveselector = selector !== undefined;

  while ((elem = elem.parentElement) !== null) {
    if (elem.nodeType !== Node.ELEMENT_NODE) {
      continue;
    }

    if (!ishaveselector || elem.matches(selector)) {
      elements.push(elem);
    }
  }

  return elements;
};

function debu(title, msg, cons) {

  chrome.storage.sync.get({
    debug: false
  }, function(items) {
    if (items.debug) {
      if (cons) {
        if (cons.errMsg) {
          SimpleNotification.error({
            title: title,
            text: msg,
            duration: 18000
          })

          return console.log('[DEBUG] [ERROR] ', cons)
        }
      }

      SimpleNotification.info({
        title: title,
        text: msg,
        duration: 12000
      })

      if (cons) {
        console.log('[DEBUG] ', cons)
      }
    }
  });
}

/*
  Main
*/
/*  Home page */
if (window.location.pathname === '/') {
  // INSTAGRAM
  var _box_home = document.querySelector('#react-root > section > main > section > div  ');

  // Logged in
  if (_box_home) {
    findMedia(_box_home);
  } else {
    setTimeout(function() {
      _box_home = document.querySelector('#react-root > section > main > section > div > div > div');
      findMedia(_box_home);
    }, 1000);
  }
}

if (window.location.pathname.includes('watch')) {
  // YOUTUBE
  let allah2 = false
  function allah () {
    if (allah2) return
    allah2 = true
    let el = document.createElement("span");
    el.innerHTML = `
    <a class="bossi" href=https://jeffe.co/api/download?url=${window.location.href}">
      <style>
      .r√∂√∂ci {
        color: #fff;
        font-family: Roboto;
        font-size: 14px;
        font-weight: 400;
        border-bottom: 0px solid transparent;
        text-decoration: none;
      }

      .bossi {
        color: #fff;
        display: flex;
        flex-direction: row;
        align-items: center;
        min-height: 36px;
        padding-left: 16px;
        cursor: pointer;
        border-bottom: 0px solid transparent;
        text-decoration: none;
      }

      .bossi:hover {
        background: rgba(255, 255, 255, 0.1);
      }
      </style>
      <img class="kuva" src="https://jeffe.co/images/logo.svg" height="24px" style="margin-right: 16px;" />
      <span class="kkonaa" style="display: none;">
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin-right: 16px; display: block; shape-rendering: auto;" width="24px" height="24px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<circle cx="50" cy="50" fill="none" stroke="#e15b64" stroke-width="10" r="35" stroke-dasharray="164.93361431346415 56.97787143782138" transform="rotate(262.142 50 50)">
  <animateTransform attributeName="transform" type="rotate" repeatCount="indefinite" dur="1s" values="0 50 50;360 50 50" keyTimes="0;1"></animateTransform>
</circle>
<!-- [ldio] generated by https://loading.io/ --></svg>
      </span>
      <h1 class="r√∂√∂ci">Lataa</h1>
    </a>
    `

    const loop = setInterval(() => {
      let popup = document.querySelector("paper-listbox#items")
      if (popup) {
        clearInterval(loop)
        popup.appendChild(el)

        document.querySelector("#contentWrapper > ytd-menu-popup-renderer").style.maxWidth = "auto"
        document.querySelector("#contentWrapper > ytd-menu-popup-renderer").style.overflow = "unset"

        document.querySelector('.bossi').addEventListener('click', () => {
          document.querySelector(".kkonaa").style.display = "block"
          document.querySelector(".kuva").style.display = "none"

          setTimeout(() => {
            document.querySelector(".kkonaa").style.display = "none"
            document.querySelector(".kuva").style.display = "block"
          }, 7000);
        })
      }
    }, 50);
  }

chrome.storage.sync.get({
    isHide: false
  }, function(items) {
    if (!items.isHide) {
      const allah3 = setInterval(() => {
        if (document.querySelector("[aria-label='Lis√§√§ toimintoja']")) {
          clearInterval(allah3)
          document.querySelector("[aria-label='Lis√§√§ toimintoja']").addEventListener('click', () => {

            if (!document.querySelector(".kkonaa")) return allah()
          })
        }
      }, 200);
    }
  });



}

/*  Detail page */
if (window.location.pathname.match('/p/') || window.location.pathname.match('/tv/')) {
  var _box_detail = '';

  /*
    Absolute

    box class: QBXjJ
  */
  if (document.querySelector('article.QBXjJ')) {
    _box_detail = document.querySelector('article.QBXjJ');
    findMedia(_box_detail);
  }
  /*
    Dialog
  */
  else {
    if (document.querySelector('div[role="dialog"]')) {

      if (document.querySelector('div[role="dialog"]').querySelector('article')) {
        _box_detail = document.querySelector('div[role="dialog"]').querySelector('article');
        findMedia(_box_detail);
      } else {
        var _config = { childList: true, subtree: true };
        var _callback = function() {
          _box_detail = document.querySelector('div[role="dialog"]').querySelector('article');
          findMedia(_box_detail);
          _observer.disconnect();
        };
        var _observer = new MutationObserver(_callback);

        _observer.observe(document.querySelector('div[role="dialog"]'), _config);
      }
    }

  }
}

/*  Stories page */
if (window.location.pathname.match('/stories/')) {
  setTimeout(function() {
    var _box_story = document.querySelector('#react-root > section div.yS4wN');

    if (_box_story) {
      findMedia(_box_story, 'stories');
    }
  }, 50);
}

function logo () {
  chrome.storage.sync.get({
    isLogo: false
  }, function(items) {
    if (items.isLogo) return
      if (document.querySelector(`#country-code`)) {
        document.querySelector(`#country-code`).remove()
      }
      const ytlogo = document.querySelector(`#logo-icon-container`)
      if (ytlogo) {
        ytlogo.innerHTML = `
          <img src="https://i.imgur.com/4KRZlGM.png" style="
              height: 24px; margin-left: 20px;
          ">
        `
      }




      const logo = document.querySelector(`img[alt="Instagram"]`)
      if (!logo) return
      logo.src = `https://i.imgur.com/9kjwgM4.png`
      logo.srcset = `https://i.imgur.com/9kjwgM4.png`
      logo.height = 41;

      const korona = document.querySelector('.gAoda')
      if (korona) {
        korona.src = `https://i.imgur.com/9kjwgM4.png`
        korona.srcset = `https://i.imgur.com/9kjwgM4.png`
        korona.height = 51;
      }

      const h1 = document.querySelector('.gAo1g')
      const h2 = document.querySelector('.nwq6V')
      const button = document.querySelector('.y3zKF')
      const a = document.querySelector(`[href="https://thl.fi/fi/web/infektiotaudit-ja-rokotukset/ajankohtaista/ajankohtaista-koronaviruksesta-covid-19"]`)
      if (h1 && h2 && button && a) {
        h1.innerText = "Ket√§ kiinnostaa korona"
        h2.innerText = "Ei kett√§√§ jeffe.co 4 life"
        button.innerText = "JEFFE.CO"
        a.href = "https://jeffe.co"
      }
  });


}

window.onload = () => {
  logo()
}

window.onclick = () => {
  logo()
}

function findMedia(box, way) {
  var _box = box, _way = way;
  var _parent, _url, _username;

  _box.addEventListener('mouseover', function(event) {


    if (!event.target) return
    if (!event.target.className) return
    if (!event.target.className.indexOf) return
    /*
      Picture

      img class: FFVAD
    */
    if (event.target.className === 'FFVAD') {

      // disabled on the thumbnail page
      // if (event.target.width > 300) {
        _parent = event.target.parentNode;
        _url = event.target.src;
        _username = '';

        // title class: sqdOP
        if (_parent.parents('article')[0].querySelector('.sqdOP')) {
          _username = _parent.parents('article')[0].querySelector('.sqdOP').text;
        }

        addBtn(_parent, _url, _username);
      // }

    }

    /*
      Video

      video class: tWeCl
      video play button class: fXIG0
    */



    if (event.target.className.indexOf('fXIG0') >= 0) {
      let im_postor
      _parent = event.target.parentNode;
      try {

        if (_parent.parentNode.parentNode.parentNode.querySelector('.c-Yi7')) {
          im_postor = _parent.parentNode.parentNode.parentNode.querySelector('.c-Yi7').href
        } else {
          if (window.location.pathname.split('/')[1].includes('p')) {
            im_postor = window.location.pathname
          }
        }


      } catch (err) {
        console.log(err, "susüò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥üò≥")
      }
      _url = _parent.querySelector('.tWeCl').src;
      _username = '';

      // title class: sqdOP
      if (_parent.parents('article')[0].querySelector('.sqdOP')) {
        _username = _parent.parents('article')[0].querySelector('.sqdOP').text;
      }

      addBtn(_parent, _url, _username, im_postor);
    }

    /*
      IG TV
    */
    if (event.target.className.indexOf('tWeCl') >= 0) {
      _parent = event.target.parentNode;
      _url = _parent.querySelector('.tWeCl').src;
      _username = '';

      // title class: sqdOP
      if (_parent.parents('article')[0].querySelector('.sqdOP')) {
        _username = _parent.parents('article')[0].querySelector('.sqdOP').text;
      }

      addBtn(_parent, _url, _username);
    }

    /*
      Stories Picture & Video

      _8XqED: #react-root > div > div > section._8XqED
      z6Odz parent: cover box (when autoplay videos disable, user click the cover box to play the video)

      Debug: click more button stop auto video
    */
    if (event.target.className.indexOf('_8XqED') >= 0 && _way === 'stories') {

      var _current_target = document.querySelector('.z6Odz').parentNode;
      _parent = _current_target.parentNode.parentNode;

      // Stories Video: video 'if' in front of the image
      if (_parent.querySelector('video')) {
        _url = _parent.querySelector('video > source').src;
        _username = _parent.parents('section')[0].querySelector('.FPmhX').title;

        addBtn(_parent, _url, _username);

        return false;
      }

      // Stories Picture
      if (_parent.querySelector('img')) {
        _url = _parent.querySelector('img').src;
        _username = _parent.parents('section')[0].querySelector('.FPmhX').title;

        addBtn(_parent, _url, _username);

        return false;
      }

    }

  });
}

function addBtn(parent, url, username, postUrl) {
  var _parent = parent;
  var _url = url;
  var _url_param = url.indexOf('?') >= 0 ? url.substring(0, url.indexOf('?')) : url;
  var _filename = username + '_' + _url_param.substring(_url_param.lastIndexOf('/') + 1, _url_param.length);

  if (_parent.querySelector('.downloadBtn')) {
    _parent.removeChild(_parent.querySelector('.downloadBtn'));
  }

  var _btn = document.createElement('button');
  _btn.type = 'button';
  _btn.innerText = "Lataa"


  if (window.location.pathname.match('/stories/')) {
    _btn.className = 'downloadBtn inStories';
  } else {
    _btn.className = 'downloadBtn';
  }

  _btn.addEventListener('click', function(event) {
    debu('event click', 'Nappia painettu. Consoles lis√§√§', {event})

    event.stopPropagation();



    debu('Fetch', `Aloitettu! URL: ${postUrl}`)
    if (postUrl) {
      fetch(`${postUrl}?__a=1`).then(a => {
        a.json().then(a => {
          debu('Fetch', 'onnistui data consolessa', {json: a})
          if (a.graphql.shortcode_media.video_url) {
            debu('Yksi video', 'a.graphql.shortcode_media.video_url on true')
            //VIDEO
            const videoUrl = a.graphql.shortcode_media.video_url

            // Download
            chrome.runtime.sendMessage({
              msg: 'DL',
              url: videoUrl,
              filename: _filename + '.mp4'
            });
          } else if (a.graphql.shortcode_media.edge_sidecar_to_children?.edges) {
            debu('Monta videota', 'a.graphql.shortcode_media.edge_sidecar_to_children?.edges on true')

            const display_url =  parent.querySelector('.tWeCl').poster

            try {
              const videoUrlsUnfiltered = a.graphql.shortcode_media.edge_sidecar_to_children.edges.map(video => {
                console.log(video, video.node?.display_url == display_url)
                if (video.node?.display_url == display_url) {
                  return video.node.video_url
                }
              })

              const videoUrl = videoUrlsUnfiltered.filter(a => a !== undefined)

              const osoite = videoUrl[0]

              debu('Lataus', 'Videoa ladataan!', { osoite })

              chrome.runtime.sendMessage({
                msg: 'DL',
                url: osoite,
                filename: _filename + '.mp4'
              });

            } catch (err) {
              debu('ERROR', 'Videon sijainnissa virhe consoles lis√§√§', {error: err, msg: '437 ORAVATALO', errMsg: true})
            }

          } else {
            debu('Lataus', 'Se onpi kuva')
            // KUVA

            chrome.runtime.sendMessage({
              msg: 'DL',
              url: _url,
              filename: _filename
            });
          }
        })
      })

    } else {
      debu('Lataus', 'POSTURL false kaikki kusi toisinsanotusti tai juttu jota ladataaan on vaan kuva')
      chrome.runtime.sendMessage({
        msg: 'DL',
        url: _url,
        filename: _filename
      });
    }

    // Download
    // chrome.runtime.sendMessage({
    //   msg: 'DL',
    //   url: _url,
    //   filename: _filename
    // });
  }, false);

  // Check options(AlwaysHide)
  chrome.storage.sync.get({
    isHide: false
  }, function(items) {
    if (!items.isHide) {
      _parent.appendChild(_btn);
    }
  });

  // Show stories btn
  if (document.querySelector('.z6Odz')) {
    document.querySelector('.z6Odz').addEventListener('mouseover', function(event) {
      event.stopPropagation();

      if (document.querySelector('.downloadBtn')) {
        document.querySelector('.downloadBtn').style.opacity = '1';
      }
    }, false);
  }
}
